/*
 * ONTAP REST API
 *
 * ONTAP 9.6 adds support for an expansive RESTful API. The documentation below provides information about the types of API calls available to you, as well as details about using each API endpoint. You can learn more about the ONTAP REST API and ONTAP in the ONTAP 9 Documentation Center:  http://docs.netapp.com/ontap-9/topic/com.netapp.doc.dot-rest-api/home.html. NetApp welcomes your comments and suggestions about the ONTAP REST API and the documentation for its use.</br> **Using the ONTAP 9.6 REST API online documentation** Each API method includes usage examples, as well as a model that displays all the required and optional properties supported by the method. Click the _Model_ link, available with each API method, to see all the required and optional properties supported by each method. 
 *
 * API version: v1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package ontap
// Flexcache Defines the cache endpoint of FlexCache.
type Flexcache struct {
	Links InlineResponse201Links `json:"_links,omitempty"`
	Aggregates []DiskAggregates `json:"aggregates,omitempty"`
	// Number of FlexCache constituents per aggregate when the 'aggregates' field is mentioned.
	ConstituentsPerAggregate int32 `json:"constituents_per_aggregate,omitempty"`
	// FlexCache name
	Name string `json:"name,omitempty"`
	Origins []FlexcacheRelationship `json:"origins,omitempty"`
	// The fully-qualified path in the owning SVM's namespace at which the FlexCache is mounted. The path is case insensitive and must be unique within a SVM's namespace. Path must begin with '/' and must not end with '/'. Only one FlexCache be mounted at any given junction path.
	Path string `json:"path,omitempty"`
	// Physical size of the FlexCache. The recommended size for a FlexCache is 10% of the origin volume. The minimum FlexCache constituent size is 1GB.
	Size int32 `json:"size,omitempty"`
	Svm FlexcacheSvm `json:"svm,omitempty"`
	// FlexCache UUID. Unique identifier for the FlexCache.
	Uuid string `json:"uuid,omitempty"`
}
