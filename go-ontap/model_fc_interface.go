/*
 * ONTAP REST API
 *
 * ONTAP 9.6 adds support for an expansive RESTful API. The documentation below provides information about the types of API calls available to you, as well as details about using each API endpoint. You can learn more about the ONTAP REST API and ONTAP in the ONTAP 9 Documentation Center:  http://docs.netapp.com/ontap-9/topic/com.netapp.doc.dot-rest-api/home.html. NetApp welcomes your comments and suggestions about the ONTAP REST API and the documentation for its use.</br> **Using the ONTAP 9.6 REST API online documentation** Each API method includes usage examples, as well as a model that displays all the required and optional properties supported by the method. Click the _Model_ link, available with each API method, to see all the required and optional properties supported by each method. 
 *
 * API version: v1
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package swagger

// A Fibre Channel (FC) interface is the logical endpoint for FC network connections to an SVM. An FC interface provides FC access to storage within the interface SVM using either Fibre Channel Protocol or NVMe over Fibre Channel (NVMe/FC).<br/> An FC interface is created on an FC port which is located on a cluster node. The FC port must be specified to identify the location of the interface for a POST or PATCH operation that relocates an interface. You can identify the port by supplying either the node and port names or the port UUID.
type FcInterface struct {
	Links *InlineResponse201Links `json:"_links,omitempty"`
	// A user configurable comment. Optional in POST; valid in PATCH. To clear a prior comment, set the property to an empty string in PATCH. 
	Comment string `json:"comment,omitempty"`
	// The data protocol for which the FC interface is configured. Required in POST. 
	DataProtocol string `json:"data_protocol,omitempty"`
	// The administrative state of the FC interface. The FC interface can be disabled to block all FC communication with the SVM through this interface. Optional in POST and PATCH; defaults to _true_ (enabled) in POST. 
	Enabled bool `json:"enabled,omitempty"`
	Location *FcInterfaceLocation `json:"location,omitempty"`
	// The name of the FC interface. Required in POST; optional in PATCH. 
	Name string `json:"name,omitempty"`
	// The port address of the FC interface. Each FC port in an FC switched fabric has its own unique FC port address for routing purposes. The FC port address is assigned by a switch in the fabric when that port logs in to the fabric. This property refers to the address given by a switch to the FC interface when the SVM performs a port login (PLOGI).<br/> This is useful for obtaining statistics and diagnostic information from FC switches.<br/> This is a hexadecimal encoded numeric value. 
	PortAddress string `json:"port_address,omitempty"`
	// The current operational state of the FC interface. The state is set to _down_ if the interface is not enabled.<br/> If the node hosting the port is down or unavailable, no state value is returned. 
	State string `json:"state,omitempty"`
	Svm *AuditSvm `json:"svm,omitempty"`
	// The unique identifier of the FC interface. Required in the URL. 
	Uuid string `json:"uuid,omitempty"`
	// The world wide node name (WWNN) of the FC interface SVM. The WWNN is generated by ONTAP when Fibre Channel Protocol or the NVMe service is created for the FC interface SVM. 
	Wwnn string `json:"wwnn,omitempty"`
	// The world wide port name (WWPN) of the FC interface. The WWPN is generated by ONTAP when the FC interface is created. 
	Wwpn string `json:"wwpn,omitempty"`
}
