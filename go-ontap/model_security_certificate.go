/*
 * ONTAP REST API
 *
 * ONTAP 9.6 adds support for an expansive RESTful API. The documentation below provides information about the types of API calls available to you, as well as details about using each API endpoint. You can learn more about the ONTAP REST API and ONTAP in the ONTAP 9 Documentation Center:  http://docs.netapp.com/ontap-9/topic/com.netapp.doc.dot-rest-api/home.html. NetApp welcomes your comments and suggestions about the ONTAP REST API and the documentation for its use.</br> **Using the ONTAP 9.6 REST API online documentation** Each API method includes usage examples, as well as a model that displays all the required and optional properties supported by the method. Click the _Model_ link, available with each API method, to see all the required and optional properties supported by each method. 
 *
 * API version: v1
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package swagger

type SecurityCertificate struct {
	Links *InlineResponse201Links `json:"_links,omitempty"`
	// Certificate authority
	Ca string `json:"ca,omitempty"`
	// FQDN or custom common name. Provide on POST when creating a self-signed certificate.
	CommonName string `json:"common_name,omitempty"`
	// Certificate expiration time. Can be provided on POST if creating self-signed certificate. The expiration time range is between 1 day to 10 years.
	ExpiryTime string `json:"expiry_time,omitempty"`
	// Hashing function. Can be provided on POST when creating a self-signed certificate. Hash functions md5 and sha1 are not allowed on POST.
	HashFunction string `json:"hash_function,omitempty"`
	// Chain of intermediate Certificates in PEM format. Only valid in POST when installing a certificate.
	IntermediateCertificates []string `json:"intermediate_certificates,omitempty"`
	// Key size of requested Certificate in bits. One of 512, 1024, 1536, 2048, 3072. Can be provided on POST if creating self-signed certificate. Key size of 512 is not allowed on POST.
	KeySize int32 `json:"key_size,omitempty"`
	// Private key Certificate in PEM format. Only valid for create when installing a CA-signed certificate. This is not audited.
	PrivateKey string `json:"private_key,omitempty"`
	// Public key Certificate in PEM format. If this is not provided in POST, a self-signed certificate is created.
	PublicCertificate string `json:"public_certificate,omitempty"`
	Scope *NetworkScopeReadonly `json:"scope,omitempty"`
	// Serial number of certificate.
	SerialNumber string `json:"serial_number,omitempty"`
	Svm *AuditSvm `json:"svm,omitempty"`
	// Type of Certificate. The following types are supported: * client - a certificate and its private key used by an SSL client in ONTAP. * server - a certificate and its private key used by an SSL server in ONTAP. * client_ca - a Certificate Authority certificate used by an SSL server in ONTAP to verify an SSL client certificate. * server_ca - a Certificate Authority certificate used by an SSL client in ONTAP to verify an SSL server certificate. * root_ca - a self-signed certificate used by ONTAP to sign other certificates by acting as a Certificate Authority. 
	Type_ string `json:"type,omitempty"`
	// Unique ID that identifies a certificate.
	Uuid string `json:"uuid,omitempty"`
}
