/*
 * ONTAP REST API
 *
 * ONTAP 9.6 adds support for an expansive RESTful API. The documentation below provides information about the types of API calls available to you, as well as details about using each API endpoint. You can learn more about the ONTAP REST API and ONTAP in the ONTAP 9 Documentation Center:  http://docs.netapp.com/ontap-9/topic/com.netapp.doc.dot-rest-api/home.html. NetApp welcomes your comments and suggestions about the ONTAP REST API and the documentation for its use.</br> **Using the ONTAP 9.6 REST API online documentation** Each API method includes usage examples, as well as a model that displays all the required and optional properties supported by the method. Click the _Model_ link, available with each API method, to see all the required and optional properties supported by each method. 
 *
 * API version: v1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package ontap
import (
	"time"
)
// VolumeSnaplock struct for VolumeSnaplock
type VolumeSnaplock struct {
	// Specifies if the volume append mode is enabled or disabled. When it is enabled, all the files created with write permissions on the volume are, by default, WORM appendable files. The user can append the data to a WORM appendable file but cannot modify the existing contents of the file nor delete the file until it expires.
	AppendModeEnabled bool `json:"append_mode_enabled,omitempty"`
	// Specifies the autocommit period for SnapLock volume. All files which are not modified for a period greater than the autocommit period of the volume are committed to the WORM state. The autocommit period value represents a duration and must be specified in the ISO-8601 duration format. The autocommit period can be in years, months, days, hours, and minutes. A period specified for years, months, and days is represented in the ISO-8601 format as \"P<num>Y\", \"P<num>M\", \"P<num>D\" respectively, for example \"P10Y\" represents a duration of 10 years. A duration in hours and minutes is represented by \"PT<num>H\" and \"PT<num>M\" respectively. The period string must contain only a single time element that is, either years, months, days, hours, or minutes. A duration which combines different periods is not supported, for example \"P1Y10M\" is not supported. Apart from the duration specified in the ISO-8601 format, the autocommit field also accepts the string \"none\".
	AutocommitPeriod string `json:"autocommit_period,omitempty"`
	// This is the volume compliance clock time which is used to manage the SnapLock objects in the volume.
	ComplianceClockTime time.Time `json:"compliance_clock_time,omitempty"`
	// Expiry time of the volume.
	ExpiryTime time.Time `json:"expiry_time,omitempty"`
	// Indicates if this volume has been configured as SnapLock audit log volume for the SVM .
	IsAuditLog bool `json:"is_audit_log,omitempty"`
	// Litigation count indicates the number of active legal-holds on the volume.
	LitigationCount int32 `json:"litigation_count,omitempty"`
	// Specifies the privileged-delete attribute of a SnapLock volume. On a SnapLock Enterprise (SLE) volume, a designated privileged user can selectively delete files irrespective of the retention time of the file. SLE volumes can have privileged delete as disabled, enabled or permanently_disabled and for SnapLock Compliance (SLC) volumes it is always permanently_disabled.
	PrivilegedDelete string `json:"privileged_delete,omitempty"`
	Retention VolumeSnaplockRetention `json:"retention,omitempty"`
	// The SnapLock type of the volume. <br>compliance &dash; A SnapLock Compliance(SLC) volume provides the highest level of WORM protection and an administrator cannot destroy a SLC volume if it contains unexpired WORM files. <br> enterprise &dash; An administrator can delete a SnapLock Enterprise(SLE) volume.<br> non_snaplock &dash; Indicates the volume is non-snaplock.
	Type string `json:"type,omitempty"`
}
