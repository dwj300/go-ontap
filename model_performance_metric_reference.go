/*
 * ONTAP REST API
 *
 * ONTAP 9.6 adds support for an expansive RESTful API. The documentation below provides information about the types of API calls available to you, as well as details about using each API endpoint. You can learn more about the ONTAP REST API and ONTAP in the ONTAP 9 Documentation Center:  http://docs.netapp.com/ontap-9/topic/com.netapp.doc.dot-rest-api/home.html. NetApp welcomes your comments and suggestions about the ONTAP REST API and the documentation for its use.</br> **Using the ONTAP 9.6 REST API online documentation** Each API method includes usage examples, as well as a model that displays all the required and optional properties supported by the method. Click the _Model_ link, available with each API method, to see all the required and optional properties supported by each method.
 *
 * API version: v1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package ontap

import (
	"time"
)

// PerformanceMetricReference Performance numbers, such as IOPS latency and throughput.
type PerformanceMetricReference struct {
	Links InlineResponse201Links `json:"_links,omitempty"`
	// The duration over which this sample is calculated. The time durations are represented in the ISO-8601 standard format. Samples can be calculated over the following durations:
	Duration string               `json:"duration,omitempty"`
	Iops     ClusterMetricIops    `json:"iops,omitempty"`
	Latency  ClusterMetricLatency `json:"latency,omitempty"`
	// Any errors associated with the sample. For example, if the aggregation of data over multiple nodes fails then any of the partial errors might be returned, \"ok\" on success, or \"error\" on any internal uncategorized failure. Whenever a sample collection is missed but done at a later time, it is back filled to the previous 15 second timestamp and tagged with \"backfilled_data\". \"Inconsistent_ delta_time\" is encountered when the time between two collections is not the same for all nodes. Therefore, the aggregated value might be over or under inflated. \"Negative_delta\" is returned when an expected monotonically increasing value has decreased in value. \"Inconsistent_old_data\" is returned when one or more nodes does not have the latest data.
	Status     string                  `json:"status,omitempty"`
	Throughput ClusterMetricThroughput `json:"throughput,omitempty"`
	// The timestamp of the performance data.
	Timestamp time.Time `json:"timestamp,omitempty"`
}
