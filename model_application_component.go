/*
 * ONTAP REST API
 *
 * ONTAP 9.6 adds support for an expansive RESTful API. The documentation below provides information about the types of API calls available to you, as well as details about using each API endpoint. You can learn more about the ONTAP REST API and ONTAP in the ONTAP 9 Documentation Center:  http://docs.netapp.com/ontap-9/topic/com.netapp.doc.dot-rest-api/home.html. NetApp welcomes your comments and suggestions about the ONTAP REST API and the documentation for its use.</br> **Using the ONTAP 9.6 REST API online documentation** Each API method includes usage examples, as well as a model that displays all the required and optional properties supported by the method. Click the _Model_ link, available with each API method, to see all the required and optional properties supported by each method. 
 *
 * API version: v1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package ontap
// ApplicationComponent struct for ApplicationComponent
type ApplicationComponent struct {
	Links InlineResponse201Links `json:"_links,omitempty"`
	Application ApplicationComponentApplication `json:"application,omitempty"`
	BackingStorage ApplicationBackingStorage `json:"backing_storage,omitempty"`
	CifsAccess []ApplicationCifsProperties `json:"cifs_access,omitempty"`
	// Defines the type of file system that will be installed on this application component.
	FileSystem string `json:"file_system,omitempty"`
	// Host management URL
	HostManagementUrl string `json:"host_management_url,omitempty"`
	// L2 Host FQDN
	HostName string `json:"host_name,omitempty"`
	// Application component name
	Name string `json:"name,omitempty"`
	NfsAccess []ApplicationNfsProperties `json:"nfs_access,omitempty"`
	ProtectionGroups []ApplicationProtectionGroups `json:"protection_groups,omitempty"`
	SanAccess []ApplicationSanAccess `json:"san_access,omitempty"`
	StorageService ApplicationComponentStorageService `json:"storage_service,omitempty"`
	Svm ApplicationComponentSvm `json:"svm,omitempty"`
	// The application component UUID. Valid in URL.
	Uuid string `json:"uuid,omitempty"`
}
