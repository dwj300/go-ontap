/*
 * ONTAP REST API
 *
 * ONTAP 9.6 adds support for an expansive RESTful API. The documentation below provides information about the types of API calls available to you, as well as details about using each API endpoint. You can learn more about the ONTAP REST API and ONTAP in the ONTAP 9 Documentation Center:  http://docs.netapp.com/ontap-9/topic/com.netapp.doc.dot-rest-api/home.html. NetApp welcomes your comments and suggestions about the ONTAP REST API and the documentation for its use.</br> **Using the ONTAP 9.6 REST API online documentation** Each API method includes usage examples, as well as a model that displays all the required and optional properties supported by the method. Click the _Model_ link, available with each API method, to see all the required and optional properties supported by each method. 
 *
 * API version: v1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package ontap
// Application Applications
type Application struct {
	Svm ApplicationSvm `json:"svm,omitempty"`
	// Application UUID. This field is generated when the application is created. Required in the URL
	Uuid string `json:"uuid,omitempty"`
	// Application Name. This field is user supplied when the application is created. Required in the POST body
	Name string `json:"name,omitempty"`
	// The time when the application was created
	CreationTimestamp string `json:"creation_timestamp,omitempty"`
	// The generation number of the application. This indicates which features are supported on the application. For example, generation 1 applications do not support snapshots. Support for snapshots was added at generation 2. Any future generation numbers and their feature set will be documented
	Generation int32 `json:"generation,omitempty"`
	// Protection granularity determines the scope of Snapshot operations for the application. Possible values are \"application\" and \"component\". If the value is \"application\", Snapshot operations are performed on the entire application. If the value is \"component\", Snapshot operations are performed separately on the application components
	ProtectionGranularity string `json:"protection_granularity,omitempty"`
	Rpo ApplicationRpo `json:"rpo,omitempty"`
	// The state of the application. For full functionality, applications must be in the online state. Other states indicate that the application is in a transient state and not all operations are supported
	State string `json:"state,omitempty"`
	Statistics ApplicationStatistics `json:"statistics,omitempty"`
	Template ApplicationTemplate1 `json:"template,omitempty"`
	MaxdataOnSan MaxdataOnSan `json:"maxdata_on_san,omitempty"`
	MongoDbOnSan MongoDbOnSan `json:"mongo_db_on_san,omitempty"`
	Nas Nas `json:"nas,omitempty"`
	OracleOnNfs OracleOnNfs `json:"oracle_on_nfs,omitempty"`
	OracleOnSan OracleOnSan `json:"oracle_on_san,omitempty"`
	OracleRacOnNfs OracleRacOnNfs `json:"oracle_rac_on_nfs,omitempty"`
	OracleRacOnSan OracleRacOnSan `json:"oracle_rac_on_san,omitempty"`
	San San `json:"san,omitempty"`
	SqlOnSan SqlOnSan `json:"sql_on_san,omitempty"`
	SqlOnSmb SqlOnSmb `json:"sql_on_smb,omitempty"`
	VdiOnNas VdiOnNas `json:"vdi_on_nas,omitempty"`
	VdiOnSan VdiOnSan `json:"vdi_on_san,omitempty"`
	VsiOnNas VsiOnNas `json:"vsi_on_nas,omitempty"`
	VsiOnSan VsiOnSan `json:"vsi_on_san,omitempty"`
	Links ApplicationLinks `json:"_links,omitempty"`
}
